{"version":3,"sources":["logo.png","Nav.js","Requests.js","axios.js","Banner.js","Row.js","screens/HomeScreen.js","Firebase.js","screens/Signupscreen.js","screens/Login.js","features/counter/userSlice.js","screens/PlanScreen.js","screens/ProfileScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Nav","history","useHistory","useEffect","window","addEventListener","handleScroll","removeEventListener","useState","show","setShow","scrollY","className","onClick","push","class","src","logo","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Banner","string","n","movie","setMovie","a","get","request","data","results","Math","floor","random","length","fetchdata","style","backgroundImage","backdrop_path","original_name","overview","substring","Row","title","fetchurl","isLargerow","movies","setMovies","trailerUrl","setTrailerUrl","console","log","map","poster_path","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","id","padding","videoId","opts","height","width","playerVars","autoplay","Homescreen","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","Signupscreen","emailRef","useRef","passRef","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","authUser","alert","message","createUserWithEmailAndPassword","Login","signIn","setSignIn","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","PlanScreen","useSelector","subscription","setSubscription","collection","doc","uid","querySnapshot","forEach","role","current_period_end","seconds","current_period_start","loadCheckout","priceId","add","price","success_url","location","origin","cancel_url","onSnapshot","snap","sessionId","loadStripe","redirectToCheckout","products","setProducts","where","productDoc","docs","prices","priceData","Object","entries","productData","description","ProfileScreen","email","signOut","App","dispatch","useDispatch","unsubscribe","onAuthStateChanged","userAuth","path","exact","store","configureStore","reducer","userReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a51c136.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a1eedcb8.png\";","import React  from 'react'\r\nimport {useState} from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport logo from './logo.png'\r\n\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",handleScroll);\r\n        return ()=>window.removeEventListener(\"scroll\",handleScroll)\r\n        \r\n    },[]);\r\n  \r\n\r\n     \r\n    const[show,setShow]=useState(false);\r\n    \r\n    const handleScroll =()=> {\r\n        if(window.scrollY>30){\r\n            setShow(true)\r\n        }else {\r\n            setShow(false)\r\n\r\n        }\r\n\r\n   }\r\n\r\n    \r\n    \r\n    \r\n    return (\r\n        <div className={show ? 'nav nav_black' : 'nav'}>\r\n           <div className=\"navcontainer\">\r\n          \r\n          <img onClick={()=>{\r\n              history.push(\"/\")\r\n          }} class=\"logo\" src={logo}/>\r\n            <img onClick={()=>{\r\n                history.push(\"/profile\")\r\n            }} class=\"avatar\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","const API_KEY=\"66a9c4df47c9e19cde72fcade87b3eb1\";\r\nconst requests={\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`, \r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`, \r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`, \r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport  default requests;","\r\nimport axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React from 'react'\r\nimport './Banner.css'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport requests from './Requests'\r\nimport axios from './axios'\r\n\r\n\r\nfunction Banner() {\r\n\r\n    const [movie, setMovie] = useState([]);\r\n   \r\n\r\n  \r\n    useEffect(() => {\r\n        async function fetchdata() {\r\n            \r\n        const request = await axios.get(requests.fetchNetflixOriginals);\r\n        setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length-1)]);\r\n       };\r\n       \r\n\r\n       fetchdata();\r\n\r\n   },[])\r\n\r\n\r\n\r\n\r\n    const trunkate=(string,n)=>{\r\n        return string?.length > n ? string.substring(0,n-1)+'.....': string;\r\n\r\n    }\r\n    return (\r\n     <header  className=\"banner\" style={{backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`}}>\r\n        <div className=\"bannercontents\">\r\n            \r\n            <h1 class=\"bannertitle\" >{movie?.original_name}</h1>\r\n        \r\n            <div className=\"bannerbuttons\">\r\n            <button className=\"bannerbutton\">Play</button>\r\n            <button className=\"bannerbutton\">My List</button>\r\n            </div>\r\n\r\n           <div className=\"bannerdiscription\"> <h1>{ trunkate(movie?.overview, 150)}</h1></div>\r\n        </div>\r\n     <div className=\"banner-fadebottom\"/>\r\n     </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React from 'react'\r\nimport './Row.css'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport axios from './axios'\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nfunction Row({title, fetchurl, isLargerow}) {\r\n\r\n    const[movies,setMovies]=useState([])\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    const baseurl= \"https://image.tmdb.org/t/p/original\";\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n          autoplay: 0,\r\n        }\r\n      }\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchdata() {\r\n            \r\n        const request = await axios.get(fetchurl);\r\n        setMovies(request.data.results);\r\n       };\r\n       \r\n\r\n       fetchdata();\r\n\r\n   },[fetchurl])\r\n\r\n   console.log(movies)\r\n\r\n\r\n   const handleClick = (movie) => {\r\n    // console.table(movie?.title)\r\n    if (trailerUrl) {\r\n      setTrailerUrl('')\r\n    } else {\r\n      movieTrailer(movie?.title || \"\")\r\n        .then(url => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get('v'));\r\n        }).catch((error) => console.log(error));\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title} </h2>\r\n<div className=\"row_posters\">\r\n            {\r\n            movies?.map((movie) =>(\r\n\r\n               (( isLargerow && movie.poster_path )|| (!isLargerow && movie.backdrop_path)) &&(\r\n\r\n<img  onClick={() => handleClick(movie)} className={` row_poster ${isLargerow && \"row_posterlarge\"}` }  key={movie.id} src={`${baseurl}${isLargerow ? movie.poster_path : movie.backdrop_path}`}/>\r\n                )\r\n            \r\n            \r\n            ))\r\n            \r\n            }\r\n</div>\r\n<div style={{ padding: \"40px\"}}>\r\n        {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React from 'react'\r\nimport './Homescreen.css'\r\nimport Navbar from '../Nav'\r\nimport Banner from '../Banner';\r\nimport Row from '../Row';\r\nimport requests from '../Requests';\r\n\r\nfunction Homescreen() {\r\n    return (\r\n        <div className=\"homescreen\">\r\n              \r\n              <Navbar/>\r\n\r\n              <Banner/>\r\n\r\n               <Row title=\"NETFLIX ORIGINALS\" fetchurl={requests.fetchNetflixOriginals} isLargerow />\r\n                <Row title=\"Trending Now\" fetchurl={requests.fetchTrending}/>\r\n                \r\n                 <Row title=\"Romantic Movies\" fetchurl={requests.fetchRomanceMovies}/>\r\n                 <Row title=\"Documentaries\" fetchurl={requests.fetchDocumentaries}/>\r\n                 <Row title=\"Comedy Movies\" fetchurl={requests.fetchComedyMovies}/>\r\n                 <Row title=\"Horror Movies\" fetchurl={requests.fetchHorrorMovies}/>\r\n             \r\n             \r\n            \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homescreen\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDx6QUCSEHqnfRfepfCndg78biDBH60uHo\",\r\n    authDomain: \"netflix-271b6.firebaseapp.com\",\r\n    projectId: \"netflix-271b6\",\r\n    storageBucket: \"netflix-271b6.appspot.com\",\r\n    messagingSenderId: \"1089581992313\",\r\n    appId: \"1:1089581992313:web:9722403b4891fb9b8987a8\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth =firebaseApp.auth();\r\n\r\n export {auth};\r\n export default db;\r\n\r\n\r\n\r\n ","import React from 'react'\r\nimport './Signupscreen.css'\r\nimport { useRef } from 'react'\r\nimport { auth } from '../Firebase'\r\n\r\nfunction Signupscreen() {\r\n\r\n    const emailRef = useRef(null);\r\n    const passRef =useRef(null);\r\n\r\n    const register =(e)=>{\r\n        e.preventDefault();\r\n\r\n        auth.createUserWithEmailAndPassword(\r\n            emailRef.current.value,\r\n            passRef.current.value\r\n        ).then((authUser) => {\r\n            console.log(authUser)\r\n\r\n\r\n        }).catch((error)=>{\r\n            alert(error.message);\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n    const signIn=(e)=>{\r\n            e.preventDefault();\r\n            auth.signInWithEmailAndPassword(emailRef.current.value,passRef.current.value).then((authUser)=>{\r\n                console.log(authUser);\r\n            }).catch((error)=>{\r\n                alert(error.message)\r\n            })\r\n\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"signupscreen\">\r\n           \r\n          \r\n            <form>\r\n                <h1>Sign In</h1>\r\n                <input ref={emailRef} type='email'placeholder=\"Email\"/>\r\n                <input ref={passRef} type='password' placeholder=\"Password\"/>\r\n                <button onClick={signIn} type=\"submit\">Sign In</button>\r\n\r\n                <h4><span className=\"signupscreenh4\">New to Netflix?</span> <span className=\"signupscreenlink\" onClick={register}>Sign Up now.</span></h4>\r\n            </form>\r\n            </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Signupscreen\r\n\r\n","import React from 'react'\r\nimport \"./Login.css\"\r\nimport { useState } from 'react'\r\nimport SigninScreen  from './Signupscreen';\r\nimport logo from'../logo.png';\r\n\r\nfunction Login() {\r\n\r\n    const [signIn,setSignIn ]=useState(false)\r\n\r\n    return (\r\n        <div className=\"loginscreen\">\r\n            <div className=\"loginscreenbg\">\r\n\r\n                <img className=\"loginscreenlogo\" src={logo}/>\r\n                <button onClick={()=>{setSignIn(true)}} className='loginscreenbtn'>Sign In</button>\r\n\r\n                <div className=\"logingradient\"/>\r\n\r\n            </div>\r\n<div className=\"loginscreenbody\">\r\n\r\n   {signIn? (<SigninScreen/>):(\r\n   <>\r\n     <h1> Unlimited films, TV programmes and more.</h1>\r\n    <h2> Watch anywhere. Cancel at any time.</h2>\r\n    <h3>Ready to watch? Enter your email to create or restart your membership.</h3>\r\n    <div className=\"loginscreeninput\">\r\n        <form>\r\n        <input type='email' placeholder='Email address'/>\r\n        <button onClick={()=>{setSignIn(true)}}className=\"emailbutton\" >Get Started ></button>\r\n        </form>\r\n\r\n        \r\n    </div> \r\n  \r\n\r\n    </>\r\n    \r\n  \r\n    )}\r\n    </div>\r\n\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Login;\r\n","import {  createSlice } from '@reduxjs/toolkit';\n\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState:{\n    user: null,\n  },\n  \n  reducers: {\n    login:(state, action) => {\n      state.user = action.payload;\n\n    },\n    logout:(state) => {\n\n      state.user = null;\n    },\n\n\n  },\n});\n\nexport const { login,logout } = userSlice.actions;\n\n\nexport const selectUser = (state) => state.user.user;\n\n\n\n\n\nexport default userSlice.reducer;\n","import React from 'react'\r\nimport './planscreen.css'\r\nimport db from'../Firebase'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport {loadStripe} from \"@stripe/stripe-js\";\r\nimport {selectUser} from '../features/counter/userSlice'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction PlanScreen() {\r\n\r\n    const user=useSelector(selectUser);\r\n\r\n    const[subscription,setSubscription]=useState(null);\r\n    useEffect(() => {\r\n        db.collection('customers')\r\n        .doc(user.uid)\r\n        .collection('subscriptions')\r\n        .get()\r\n        .then(querySnapshot=>{\r\n            querySnapshot.forEach(async subscription=>{\r\n                setSubscription({role:subscription.data().role,\r\n                    current_period_end:subscription.data().current_period_end.seconds,\r\n                current_period_start:subscription.data().current_period_start.seconds})\r\n            })\r\n        })\r\n    },[user.uid]);\r\n\r\n    console.log(subscription);\r\n\r\n    const loadCheckout= async (priceId)=>{\r\n\r\n        const docRef =await db\r\n        .collection(\"customers\")\r\n        .doc(user.uid)\r\n        .collection(\"checkout_sessions\")\r\n        .add({\r\n            price :priceId,\r\n            success_url:window.location.origin,\r\n            cancel_url:window.location.origin,\r\n        });\r\n    docRef.onSnapshot(async (snap)=>{\r\n            const{ error,sessionId}=snap.data();\r\n            if(error){\r\n                alert(`an error occured:${error.message}`);\r\n            }\r\n            if(sessionId){\r\n                const stripe = await loadStripe(\"pk_test_51J3EqUSDRuNSm1nslp10mLiEhNnHyZTwADUZ3WNp8AZAOGem3RXRVzJWkJzfGZJ0iUi1pIjnwcDGYXftu0PasMq100SQ1gIaco\");\r\n                stripe.redirectToCheckout({sessionId});\r\n            }\r\n           \r\n        });\r\n\r\n    }\r\n\r\n    const[products,setProducts] =  useState([])\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n        db.collection('products')\r\n        .where(\"active\",\"==\",true)\r\n        .get()\r\n        .then(querySnapshot=>{\r\n            const products={};\r\n            querySnapshot.forEach(async (productDoc)=>{\r\n                products[productDoc.id]=productDoc.data();\r\n                const pricesnap = await productDoc.ref.collection(\"prices\").get();\r\n                pricesnap.docs.forEach((price)=>{\r\n                    products[productDoc.id].prices ={\r\n                        priceId :price.id,\r\n                        priceData :price.data(),\r\n                    };\r\n                });\r\n            });\r\n\r\n            setProducts(products);\r\n\r\n        });\r\n    \r\n       \r\n    }, [])\r\n\r\n    console.log(products)\r\n    return (\r\n        <div className=\"planscreen\">\r\n\r\n            {Object.entries(products).map(([productId,productData])=>{\r\n                //add some logic to user subscription\r\n\r\n                return(\r\n                    <div className=\"planscreen_plans\">\r\n                        <div className=\"planscreen_info\">\r\n\r\n                            <h5>{productData.name}</h5>\r\n                            <h6>{productData.description}</h6>\r\n                        </div>\r\n                        <button onClick={()=>{loadCheckout(productData.prices.priceId)}}>Subscribe</button>\r\n                    </div>\r\n\r\n                )\r\n            })}\r\n            \r\n        \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PlanScreen\r\n","import React from 'react'\r\nimport './Profilescreen.css'\r\nimport Nav from '../Nav'\r\nimport { useSelector } from 'react-redux'\r\nimport {selectUser} from '../features/counter/userSlice'\r\nimport {auth} from '../Firebase'\r\nimport PlansScreen from './PlanScreen'\r\n\r\n\r\n\r\n\r\n\r\nfunction ProfileScreen() {\r\n\r\n  const user = useSelector(selectUser);\r\n    return (\r\n\r\n\r\n        <div className=\"profilescreen\">\r\n          <Nav/>\r\n          <div className=\"profile_screen_body\">\r\n            <h1>Edit Profile</h1>\r\n            <div className=\"profile_screen_info\">\r\n              <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"/>\r\n              <div className=\"profile_screen_details\">\r\n                <h2> {user.email}</h2>\r\n                <div className=\"profile_screen_plans\">\r\n                  <h3>Plans</h3>\r\n\r\n                  <PlansScreen/>\r\n                \r\n\r\n\r\n\r\n\r\n                  <button onClick={()=>{\r\n                    auth.signOut()\r\n                  }} className=\"profilescreensignout\"> Sign Out</button>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React from 'react';\nimport './App.css';\nimport Homescreen from './screens/HomeScreen';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport Login from './screens/Login';\nimport { useEffect } from 'react';\nimport { auth } from './Firebase';\nimport { useDispatch ,useSelector} from 'react-redux';\nimport ProfileScreen from './screens/ProfileScreen';\n\n\nimport { login,logout ,selectUser} from './features/counter/userSlice';\n\nfunction App() {\nconst user = useSelector(selectUser)\nconst dispatch = useDispatch();\nuseEffect(()=>{\n\n  const unsubscribe =auth.onAuthStateChanged(userAuth=>{\n    if(userAuth){\n      \n      dispatch(login({\n        uid: userAuth.uid,\n        email:userAuth.email,\n      }\n      ))\n\n    }else{\ndispatch(logout())\n    }\n  })\n  return()=>{\n    unsubscribe();\n  }\n\n},[dispatch])\n\n  \n  return (\n <div className=\"app\">\n\n<Router>\n  {!user? (<Login/>) :(   <Switch>\n\n    <Route path=\"/profile\">\n      <ProfileScreen/>\n    </Route>\n        <Route exact path=\"/\">\n          <Homescreen/>\n        </Route>\n      </Switch>        )}\n      \n    </Router>\n    \n   \n    </div>\n    \n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/counter/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}